services:
  broker_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: broker_app
    user: "root" # Run the container as the root user
    restart: unless-stopped
    env_file:
      - .env
    environment:
      APP_ENV: ${APP_ENV}
      SERVER_NAME: 0.0.0.0:9000
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?serverVersion=${DB_VERSION}&charset=utf8mb4
      HANDLER: public/index.php
      DOCUMENT_ROOT: public
    ports:
      - "8780:80"
    volumes:
      - ./:/var/task # Mount local files inside the container
      - ./var/cache:/var/task/var/cache
      - ./var/logs:/var/task/var/log
    networks:
      - broker_network
    command: >
      sh -c "
      composer install &&
      php bin/console doctrine:database:create --if-not-exists &&
      php bin/console doctrine:schema:update --force &&
      if [ ! -f /var/task/fixtures_loaded ]; then
        php bin/console doctrine:fixtures:load --no-interaction &&
        touch /var/task/fixtures_loaded;
      fi &&
      php-fpm
      "

  broker_mariadb:
    container_name: broker_mariadb
    image: mariadb:10.6
    command: --default-authentication-plugin=mysql_native_password
    working_dir: /var/lib/mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3706:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - broker_network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    depends_on:
      - broker_mariadb
    ports:
      - "8880:80"
    environment:
      PMA_HOST: broker_mariadb
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
    networks:
      - broker_network

  broker_redis:
    image: redis:latest
    container_name: broker_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    networks:
      - broker_network

volumes:
  mariadb_data:
  redis_data:

networks:
  broker_network:
    driver: bridge
